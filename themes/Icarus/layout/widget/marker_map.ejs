<script src="https://npm.webcache.cn/@babel/polyfill/dist/polyfill.min.js"></script>
<script src="https://polyfill.io/v3/polyfill.min.js?features=Promise%2CIntersectionObserver"></script>

<script src="https://npm.webcache.cn/dom-renderer"></script>
<script src="https://npm.webcache.cn/web-cell@1.2.3"></script>
<script src="//webapi.amap.com/maps?v=1.4.15&key=<%= config.amap.key %>&plugin=AMap.Geocoder,AMap.AdvancedInfoWindow"></script>

<template><%= JSON.stringify( markers ) %></template>
<template>
  <div style="padding: 0.5rem 0.5rem 0 0.5rem">
    <h4>
      <a href="${view.URL}">${view.title}</a>
    </h4>
    <p>${view.address}</p>
  </div>
</template>
<div class="embed-box"></div>

<script>
(function (main) {

  var box = document.currentScript.previousElementSibling;

  self.addEventListener('load',  function () {

    new IntersectionObserver(function (entry, observer) {

      observer.disconnect();

      main(
        self['dom-renderer'].default,
        self['web-cell'].unique,
        box,
        box.previousElementSibling,
        box.previousElementSibling.previousElementSibling
      );
    }).observe( box );
  });
})(function (View, unique, box, template, list) {

  list = unique(JSON.parse( list.innerHTML.trim() ), function (A, B) {

    return A.address !== B.address;
  });

  var map = new AMap.Map(box, {resizeEnable: true}),
    coder = new AMap.Geocoder(),
    dialog = new AMap.AdvancedInfoWindow({
      offset: new AMap.Pixel(0, -30),
      showShadow: true,
      closeWhenClickMap: true
    }),
    template = new View( template.innerHTML );

  function getCoords(addresses) {

    return new Promise(function (resolve, reject) {

      coder.getLocation(addresses,  function (status, result) {

        if (status === 'error')
          reject( result );
        else if (status === 'complete')
          resolve( result );
      });
    });
  }

  getCoords(
    list.map(function (item) {  return item.address;  })
  ).then(function (data) {

    if (! data.geocodes[0])  return;

    var markers = data.geocodes.map(function (item, index) {

      var marker = new AMap.Marker({position: item.location});

      marker.on('click',  function () {

        template.render( list[index] ).then(function () {

          dialog.setContent(template + '');

          dialog.open(map, item.location);
        });
      });

      return marker;
    });

    map.add( markers ),  map.setFitView( markers );
  });
});
</script>
